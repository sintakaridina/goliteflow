name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name for release"
        required: false
        default: "v1.0.0"

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${{ github.event.inputs.tag_name || 'v1.0.0' }}
            VERSION=${VERSION#v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name || github.event.inputs.tag_name || 'v1.0.0' }}
          release_name: GoliteFlow ${{ github.ref_name || github.event.inputs.tag_name || 'v1.0.0' }}
          draft: false
          prerelease: false
          body: |
            ## GoliteFlow ${{ steps.get_version.outputs.version }}

            ### Download Instructions

            #### Linux (AMD64)
            ```bash
            curl -L https://github.com/sintakaridina/goliteflow/releases/latest/download/goliteflow-linux-amd64 -o goliteflow
            chmod +x goliteflow
            ```

            #### Windows (AMD64)
            ```bash
            curl -L https://github.com/sintakaridina/goliteflow/releases/latest/download/goliteflow-windows-amd64.exe -o goliteflow.exe
            ```

            #### macOS (Apple Silicon)
            ```bash
            curl -L https://github.com/sintakaridina/goliteflow/releases/latest/download/goliteflow-darwin-arm64 -o goliteflow
            chmod +x goliteflow
            ```

            ### Installation

            After downloading, you can verify the installation:
            ```bash
            ./goliteflow --version
            ```

            ### What's Changed
            - New release of GoliteFlow v${{ steps.get_version.outputs.version }}

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            output: goliteflow-linux-amd64
          - goos: windows
            goarch: amd64
            output: goliteflow-windows-amd64.exe
          - goos: darwin
            goarch: arm64
            output: goliteflow-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.19"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o ${{ matrix.output }} ./cmd/goliteflow

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ matrix.output }}
          asset_name: ${{ matrix.output }}
          asset_content_type: application/octet-stream
